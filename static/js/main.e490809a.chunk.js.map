{"version":3,"sources":["components/Todo.js","components/List.js","components/Form.js","components/Contacts.js","App.js","index.js"],"names":["Todo","todo","onEdit","onUpdate","onDelete","justifyContent","alignItems","flex","size","colorScheme","isChecked","completed","onChange","overflowWrap","defaultValue","name","onSubmit","editText","id","trim","icon","Close","w","h","onClick","List","todos","className","map","bind","defaultTodos","Form","addTodo","useState","value","setValue","e","preventDefault","variant","mb","placeholder","Math","floor","random","length","target","Contacts","style","fontSize","margin","color","display","alignContent","href","aria-label","mr","App","localStorageRef","localStorage","getItem","JSON","parse","setTodos","useEffect","notCompletedTodosCount","filter","document","title","setItem","stringify","removeAllTodos","undefined","newTodos","item","p","replace","c","r","toString","find","mt","width","border","borderColor","my","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e490809a.chunk.js","sourcesContent":["import {Box, IconButton, Checkbox, Editable, EditableInput, EditablePreview, Flex} from \"@chakra-ui/react\"\r\nimport {CloseIcon} from \"@chakra-ui/icons\";\r\n\r\n\r\nfunction Todo({todo, onEdit, onUpdate, onDelete}) {\r\n    const handleSubmit = editText => editText === '' ? onDelete(todo.id) : onEdit(todo.id, editText.trim())\r\n\r\n    return (\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n                <Checkbox flex=\"0 0 10%\" size=\"lg\" colorScheme=\"green\"\r\n                          isChecked={todo.completed} onChange={onUpdate}/>\r\n                <Box flex=\"0 0 80%\"  overflowWrap=\"break-word\">\r\n                    <Editable defaultValue={todo.name}\r\n                              onSubmit={handleSubmit}>\r\n                        <EditablePreview/>\r\n                        <EditableInput />\r\n                    </Editable>\r\n                </Box>\r\n                <IconButton icon={<CloseIcon w={2} h={2}/>} flex=\"0 0 5%\" size=\"xs\"\r\n                        onClick={onDelete}>\r\n                </IconButton>\r\n            </Flex>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Todo;\r\n","import Todo from \"./Todo\";\r\n\r\n\r\nfunction List({todos, onEdit, onUpdate, onDelete}) {\r\n    return (\r\n        <div className=\"List\">\r\n            {todos.map(todo =>\r\n                (\r\n                    <Todo\r\n                        key={todo.id} todo={todo}\r\n                        onEdit={onEdit.bind(null)}\r\n                        onDelete={onDelete.bind(null, todo.id)}\r\n                        onUpdate={onUpdate.bind(null, todo.id)}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;\r\n","import {useState} from \"react\"\r\nimport {Input} from \"@chakra-ui/react\"\r\n\r\n\r\nconst defaultTodos = [\"Buy flowers for mom's birthday 🥰\", \"Organize photo shoot 🤔\", \"Fix bugs 🥴\", \"Plan weekend 🧐\", \"Meet with George 🤗\"]\r\n\r\nfunction Form({addTodo}) {\r\n    const [value, setValue] = useState(\"\")\r\n\r\n    const getRandomPlaceholder = () => defaultTodos[Math.floor(Math.random() * defaultTodos.length)]\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (!value.trim()) return\r\n        addTodo(value)\r\n        setValue(\"\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Input value={value}\r\n                   variant=\"filled\"\r\n                   mb={5}\r\n                   placeholder={getRandomPlaceholder()}\r\n                   onChange={e => setValue(e.target.value)}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import {ImGithub, ImMail4, ImTelegram} from \"react-icons/im\"\r\nimport {Box, IconButton} from \"@chakra-ui/react\"\r\n\r\n\r\nconst Contacts = () => {\r\n    const boxStyle = {\r\n        fontSize: \"1.7rem\",\r\n        margin: \"0 0 .75rem 0\",\r\n        color: \"#A0AEC0\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"spaceAround\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box style={boxStyle}>\r\n                <a href=\"https://github.com/yuruyu6\">\r\n                    <IconButton aria-label=\"Github\" mr={5} icon={<ImGithub/>}/>\r\n                </a>\r\n                <a href=\"https://t.me/grooo0\">\r\n                    <IconButton aria-label=\"Telegram\" mr={5} icon={<ImTelegram/>}/>\r\n                </a>\r\n                <a href=\"mailto:yuruyu6@gmail.com\">\r\n                    <IconButton aria-label=\"Mail\" mr={5} icon={<ImMail4/>}/>\r\n                </a>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contacts;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Divider, Button, Container, Text} from \"@chakra-ui/react\"\r\nimport List from \"./components/List\";\r\nimport Form from \"./components/Form\";\r\nimport Contacts from \"./components/Contacts\";\r\n\r\nconst generateUUID = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r && 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\nfunction App() {\r\n    const localStorageRef = localStorage.getItem('todos')\r\n    const [todos, setTodos] = useState(JSON.parse(localStorageRef) || [])\r\n\r\n    useEffect(() => {\r\n        const notCompletedTodosCount = todos.filter((todo) => todo.completed === false).length\r\n        document.title = notCompletedTodosCount > 0 ? notCompletedTodosCount + ' todos' : notCompletedTodosCount + ' todo';\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    const addTodo = value => {\r\n        const newTodos = [...todos, {id: generateUUID(), name: value, completed: false}]\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const editTodo = (id, value) => {\r\n        const newTodos = [...todos]\r\n        newTodos.find(item => item.id === id).name = value\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const updateTodo = id => {\r\n        const newTodos = [...todos]\r\n        newTodos.find(item => item.id === id).completed = !(newTodos.find(item => item.id === id).completed)\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const newTodos = todos.filter(item => item.id !== id)\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const removeAllTodos = completed => {\r\n        if (completed === undefined) return setTodos([])\r\n        const newTodos = todos.filter(item => item.completed === !completed)\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n            <Container p={7}>\r\n                <Form addTodo={addTodo}/>\r\n                <Divider mb={5} />\r\n                {todos.length > 0\r\n                    ?\r\n                    <>\r\n                        <List todos={todos}\r\n                              onDelete={removeTodo}\r\n                              onEdit={editTodo}\r\n                              onUpdate={updateTodo}/>\r\n\r\n                            <Button mt={5} width=\"100%\"\r\n                                    onClick={() => removeAllTodos(true)}>Remove completed</Button>\r\n                            <Button mt={2}\r\n                                    width=\"100%\"\r\n                                    onClick={() => removeAllTodos(false)}>Remove not completed</Button>\r\n                            <Button mt={2}\r\n                                    width=\"100%\"\r\n                                    border=\"1px\"\r\n                                    borderColor=\"red.500\"\r\n                                    onClick={() => removeAllTodos()}>Remove all</Button>\r\n                    </>\r\n                    : <Text fontSize=\"2xl\">Your To-Do list is empty...</Text>}\r\n                <Divider my={5} />\r\n                <Contacts/>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {ChakraProvider} from \"@chakra-ui/react\";\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ChakraProvider>\r\n                <App/>\r\n        </ChakraProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}